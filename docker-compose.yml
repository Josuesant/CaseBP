services:
  cadastrocliente:
    build:
      context: .
    ports:
      - '5001:8080'
    environment:
      APP_ENVIRONMENT: docker
      APP_LANGUAGE: pt-BR
      APP_NAME: CadastroCliente
      APP_VERSION: 1.0.0
      JWT_AUDIENCE: DEFAULT_JWT_AUDIENCE
      JWT_ISSUER: DEFAULT_JWT_ISSUER
      JWT_SECURITY_KEY: DEFAULT_256_BITS_JWT_SECURITY_KEY
      POSTGRESQL_CONNECTION_STRING: Host=postgres;Port=5432;Database=CadastroCliente;Username=postgres;Password=postgres;Command Timeout=60;Timeout=60;SSL Mode=Disable;Trust Server Certificate=True
      RABBITMQ_CONNECTION_STRING: amqp://guest:guest@127.0.0.1:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:latest
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    hostname: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq:/data/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    hostname: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres:
  rabbitmq:

    
